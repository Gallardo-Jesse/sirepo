client=$(hostname -f)
server=$client
serial=$(date +%s)

mkdir -p $server
cd $server
mkdir -p server client
openssl genrsa -out cakey.pem 2048
openssl genrsa -out server/key.pem 2048
openssl genrsa -out client/key.pem 2048

openssl req -x509 -new -nodes -key cakey.pem -days 10000 -out ca.pem -subj /CN=$server

openssl req -new -key server/key.pem -out server/cert.csr -subj /CN=$server

openssl req -new -key client/key.pem -out client/cert.csr -subj /CN=$client

openssl x509 -req -in client/cert.csr -CA ca.pem -CAkey cakey.pem -set_serial $serial -out client/cert.pem -days 10000 -extensions v3_req

openssl x509 -req -in server/cert.csr -CA ca.pem -CAkey cakey.pem -set_serial $serial -out server/cert.pem -days 10000 -extensions v3_req

client=$(hostname -f)
server=$client
mkdir -p $server
cd $server
mkdir -p server client
openssl genrsa -out cakey.pem 2048
openssl genrsa -out server/key.pem 2048
openssl genrsa -out client/key.pem 2048

openssl req -x509 -new -nodes -key cakey.pem -days 10000 -out ca.pem -subj /CN=$server

cat > openssl.cfg <<'EOF'
[req]
req_extensions = v3_req
distinguished_name = req_distinguished_name
[req_distinguished_name]
[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth
EOF

openssl req -new -key server/key.pem -out server/cert.csr -subj /CN=$server -config openssl.cfg
openssl req -new -key client/key.pem -out client/cert.csr -subj /CN=$client -config openssl.cfg
openssl x509 -req -in client/cert.csr -CA ca.pem -CAkey cakey.pem -CAcreateserial -out client/cert.pem -days 10000 -extensions v3_req -extfile openssl.cfg
openssl x509 -req -in server/cert.csr -CA ca.pem -CAkey cakey.pem -CAcreateserial -out server/cert.pem -days 10000 -extensions v3_req -extfile openssl.cfg

rm -f openssl.cfg

sudo install -m 700 -d /etc/docker/tls
sudo install -m 400 ca.pem /etc/docker/tls
sudo install -m 400 server/key.pem /etc/docker/tls
sudo install -m 400 server/cert.pem /etc/docker/tls

# append /etc/docker/daemon.json
cat <<EOF
    "hosts": ["tcp://$(dig +short $client):2376", "unix:///run/docker.sock"],
    "tls": true,
    "tlsverify": true,
    "tlscacert": "/etc/docker/tls/ca.pem",
    "tlscert": "/etc/docker/tls/cert.pem",
    "tlskey": "/etc/docker/tls/key.pem",
EOF

cp ca.pem client
chmod -R go-rwx client
d=~/src/radiasoft/sirepo/run/runner/docker_tls/$server
cp -a client "$d"

docker \
    --host=tcp://$server:2376 \
    --tlscacert=$d/ca.pem \
    --tlscert=$d/cert.pem \
    --tlskey=$d/key.pem \
    --tlsverify \
    ps

mkdir -p ~/src/radiasoft/
