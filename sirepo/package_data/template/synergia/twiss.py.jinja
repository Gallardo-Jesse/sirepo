
from rssynergia.base_diagnostics import lfplot

def row_has_data(row):
    for k in row:
        if k != 'name' and row[k] != 0:
            return True
    return False

lattice = synergia.lattice.MadX_reader().get_lattice('{{ use_beamline }}', LATTICE_FILE)
stepper = synergia.simulation.Independent_stepper_elements(
    lattice,
    {{ simulationSettings_map_order }}, # map_order
    5 # num_steps_per_element
)
twiss = lfplot.get_sliced_lf_fns(lattice, stepper.get_lattice_simulator())

import h5py
import numpy as np
h5file = h5py.File('{{ twissFileName }}', 'w')
for k in twiss[0]:
    dtype = np.dtype('a30') if k == 'name' else np.dtype(float)
    rows = []
    for row in twiss:
        if row_has_data(row):
            rows.append(row[k])
    data = h5file.create_dataset(k, (len(rows),), dtype=dtype)
    data[:] = rows
h5file.close()
